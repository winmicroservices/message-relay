name: Docker Image CI for Master

on:
  push:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run Tests 
        run: mvn clean test jacoco:report
      - name: Publish test coverage results
        uses: PavanMudigonda/jacoco-reporter@v4.8
        with:
          coverage_results_path: 'target/site/jacoco/jacoco.xml'
          coverage_report_title: 'Test coverage results'
          coverage_report_name: 'Test coverage results'
          github_token: ${{ secrets.GITHUB_TOKEN }}
  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: polinchw/message-relay

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.18.0
        with:
          github-token: ${{ secrets.CHANGELOG_RELEASE }}
          tag-prefix: 'v'

      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Print new version 
        run: echo ${{ steps.changelog.outputs.version }}

      - name: Print new tag
        run: echo ${{ steps.changelog.outputs.tag }}

      - name: Build with Maven
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: mvn -Pnative spring-boot:build-image -Dspring-boot.build-image.imageName=polinchw/message-relay:${{ steps.changelog.outputs.version }}

      - name: Create Release
        uses: actions/create-release@v1
        id: release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGELOG_RELEASE }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Push Docker Image
        id: docker-push
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: docker push polinchw/message-relay:${{ steps.changelog.outputs.version }}